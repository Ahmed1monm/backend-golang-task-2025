version: '3.8'

services:
  app:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: backend-app
    ports:
      - "8080:8080"
    environment:
      - ENV=development
      - PORT=8080
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=myapp
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_SSLMODE=disable
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
      - REDIS_DB=0
      - JWT_SECRET=your_jwt_secret_key
      - JWT_EXPIRATION=24h
      - RATE_LIMIT_REQUESTS=100
      - RATE_LIMIT_WINDOW_SECONDS=3600
    depends_on:
      - postgres
      - redis
    networks:
      - backend-network
    restart: unless-stopped

  postgres:
    image: postgres:16-alpine
    container_name: backend-postgres
    environment:
      - POSTGRES_DB=myapp
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: backend-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - backend-network
    restart: unless-stopped

networks:
  backend-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
